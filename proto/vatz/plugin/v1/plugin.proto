syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";

package vatz.plugin;
option go_package = "github.com/xellos00//dk-yuba-proto/proto/vatz/plugin/v1";

service Plugin {
    rpc verify (google.protobuf.Empty) returns (VerifyInfo) {}
    rpc execute (ExecuteRequest) returns (ExecuteResponse) {}
}

message ExecuteRequest {
    // is_required: true
    google.protobuf.Struct execute_info = 1;
    // is_required: true
    google.protobuf.Struct options = 2;
}

//성공 예제 => CPU 파싱은
//{
//  'state': SUCCESS,
//  'message': "90%",
//  'severity': `CRITICAL`
//  'resource_type': "discord"
//}
enum ALERT_TYPE {
    DISCORD = 0;
    PAGER_DUTY = 1;
}

enum State {
    NONE = 0;
    PENDING = 1;
    IN_PROGRESS = 2;
    SUCCESS = 3;
    FAILURE = 4;
    TIMEOUT = 5;
}

enum Severity {
    UNKNOWN = 0;
    WARNING = 1;
    ERROR = 2;
    CRITICAL = 3;
    INFO = 4;
}

message ExecuteResponse {

    State state = 1;
    string message = 2;
    ALERT_TYPE alert_type = 3;
    Severity severity = 4;
}


message CollectorVerifyInfo {
    google.protobuf.Struct options = 1;
}

message VerifyInfo {
    string verify_msg = 1;
}