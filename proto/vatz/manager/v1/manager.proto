syntax = "proto3";

import "google/protobuf/struct.proto";

package vatz.manager;
option go_package = "github.com/xellos00/dk-yuba-proto/proto/vatz/manager/v1";

service Manager {
    rpc Init(InitRequest) returns (InitResponse) {}
    rpc Verify(VerifyRequest) returns (VerifyInfo) {}
    rpc End(EndRequest) returns (EndResponse) {}
    rpc Execute(ExecuteRequest) returns (ExecuteResponse) {}
    rpc UpdateConfig(UpdateRequest) returns (UpdateResponse) {}
}

enum CommandStatus {
    SUCCESS = 0;
    FAIL = 1;
}

//  Metadata 레퍼런스로 항상 넣어서 사용하지 않더라도 넣어주는 값
//  option 필수값은 아님 항상 변경이 될 수 있는 값
message InitRequest {
    string name  = 1 ;
    string address = 2;
    int32 port  = 3;
    float version = 4; // version >< revision 때문에 정확한 타입지정이 필요
    google.protobuf.Struct option = 5; // mapType 변환
}

message InitResponse {
    CommandStatus result = 1;
    google.protobuf.Struct metadata =2;
}

message VerifyRequest {
    google.protobuf.Struct options = 1;
}

message VerifyInfo {
    CommandStatus result = 1;
}

message EndRequest {
    google.protobuf.Struct metadata =1;
}

message EndResponse {
    CommandStatus result = 1;
}

message ExecuteRequest {
    // is_required: true
    google.protobuf.Struct target_info = 1;
    // is_required: true
    google.protobuf.Struct command = 2;
}


message ExecuteResponse {
    enum State {
        NONE = 0;
        PENDING = 1;
        IN_PROGRESS = 2;
        SUCCESS = 3;
        FAILURE = 4;
        TIMEOUT = 5;
    }
    State state = 1;
    string message = 2;
    string protocol = 3;
    google.protobuf.Struct options = 4;
}


message UpdateRequest {
}

message UpdateResponse {
}